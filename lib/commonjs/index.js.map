{"version":3,"names":["_reactNative","require","LINKING_ERROR","VoiceStreamNative","NativeModules","VoiceStream","Proxy","get","Error","StreamEmitter","exports","Platform","OS","NativeEventEmitter","eventsMap","data","VoiceStreamer","init","start","stop","listen","event","callback","nativeEvent","removeAllListeners","addListener","_default","default"],"sources":["index.ts"],"sourcesContent":["import { NativeModules, NativeEventEmitter, Platform } from 'react-native';\n\nconst LINKING_ERROR =\n  `The package 'react-native-voice-stream' doesn't seem to be linked. Make sure: \\n\\n` +\n  '- You have run \"pod install\" in the ios/ directory\\n' +\n  '- You rebuilt the app after installing the package\\n' +\n  '- You are running on iOS (Android is not supported yet)\\n';\n\nconst VoiceStreamNative = NativeModules.VoiceStream\n  ? NativeModules.VoiceStream\n  : new Proxy(\n      {},\n      {\n        get() {\n          throw new Error(LINKING_ERROR);\n        },\n      }\n    );\n\n    \nexport const StreamEmitter = Platform.OS === 'ios' \n  ? new NativeEventEmitter(VoiceStreamNative)\n  : null;\n\n\nexport interface AudioStreamOptions {\n  sampleRate?: number;     // Default: 44100 Hz\n  channels?: number;       // Default: 1 (mono)\n  bufferSize?: number;     // Default: 2048 bytes\n  bitsPerSample?: number;  // Default: 16 bits\n}\n\nexport interface VoiceStreamInterface {\n  /**\n   * Initialize the audio recorder with configuration options\n   */\n  init(options?: AudioStreamOptions): void;\n  \n  /**\n   * Start real-time audio recording and base64 streaming\n   */\n  start(): void;\n\n  listen(event: \"data\", callback: (data: string) => void): void;\n  \n  /**\n   * Stop audio recording\n   */\n  stop(): void;\n}\n\nconst eventsMap = {\n  data: 'data'\n};\n\nconst VoiceStreamer = {\n  init: VoiceStreamNative.init,\n  start: VoiceStreamNative.start,\n  stop: VoiceStreamNative.stop,\n}\n\n// @ts-ignore\nVoiceStreamer.listen = (event, callback) => {\n  const nativeEvent = eventsMap[event];\n  if (!nativeEvent) {\n    throw new Error('Invalid event');\n  }\n  StreamEmitter?.removeAllListeners(nativeEvent);\n  return StreamEmitter?.addListener(nativeEvent, callback);\n};\n\n\n\nexport default VoiceStreamer;\n"],"mappings":";;;;;;AAAA,IAAAA,YAAA,GAAAC,OAAA;AAEA,MAAMC,aAAa,GACjB,oFAAoF,GACpF,sDAAsD,GACtD,sDAAsD,GACtD,2DAA2D;AAE7D,MAAMC,iBAAiB,GAAGC,0BAAa,CAACC,WAAW,GAC/CD,0BAAa,CAACC,WAAW,GACzB,IAAIC,KAAK,CACP,CAAC,CAAC,EACF;EACEC,GAAGA,CAAA,EAAG;IACJ,MAAM,IAAIC,KAAK,CAACN,aAAa,CAAC;EAChC;AACF,CACF,CAAC;AAGE,MAAMO,aAAa,GAAAC,OAAA,CAAAD,aAAA,GAAGE,qBAAQ,CAACC,EAAE,KAAK,KAAK,GAC9C,IAAIC,+BAAkB,CAACV,iBAAiB,CAAC,GACzC,IAAI;AA6BR,MAAMW,SAAS,GAAG;EAChBC,IAAI,EAAE;AACR,CAAC;AAED,MAAMC,aAAa,GAAG;EACpBC,IAAI,EAAEd,iBAAiB,CAACc,IAAI;EAC5BC,KAAK,EAAEf,iBAAiB,CAACe,KAAK;EAC9BC,IAAI,EAAEhB,iBAAiB,CAACgB;AAC1B,CAAC;;AAED;AACAH,aAAa,CAACI,MAAM,GAAG,CAACC,KAAK,EAAEC,QAAQ,KAAK;EAC1C,MAAMC,WAAW,GAAGT,SAAS,CAACO,KAAK,CAAC;EACpC,IAAI,CAACE,WAAW,EAAE;IAChB,MAAM,IAAIf,KAAK,CAAC,eAAe,CAAC;EAClC;EACAC,aAAa,aAAbA,aAAa,eAAbA,aAAa,CAAEe,kBAAkB,CAACD,WAAW,CAAC;EAC9C,OAAOd,aAAa,aAAbA,aAAa,uBAAbA,aAAa,CAAEgB,WAAW,CAACF,WAAW,EAAED,QAAQ,CAAC;AAC1D,CAAC;AAAC,IAAAI,QAAA,GAAAhB,OAAA,CAAAiB,OAAA,GAIaX,aAAa","ignoreList":[]}