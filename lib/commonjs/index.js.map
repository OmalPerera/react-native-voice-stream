{"version":3,"names":["_reactNative","require","VoiceStream","NativeModules","EventEmitter","NativeEventEmitter","eventKey","VoiceStreamer","init","options","start","stop","listen","event","callback","Error","removeAllListeners","addListener","_default","exports","default"],"sources":["index.ts"],"sourcesContent":["import { IStreamOptions, IVoiceStreamer } from './index.d';\n// @ts-ignore\nimport { NativeModules, NativeEventEmitter } from 'react-native';\nconst { VoiceStream } = NativeModules;\nconst EventEmitter = new NativeEventEmitter(VoiceStream);\nconst eventKey = 'data';\n\nconst VoiceStreamer: IVoiceStreamer = {\n  init: (options: IStreamOptions): Promise<void> => {\n    return VoiceStream.init(options);\n  },\n\n  start: (): Promise<void> => VoiceStream.start(),\n\n  stop: (): Promise<void> => VoiceStream.stop(),\n  \n  listen: (event: 'data', callback: (data: string) => void) => {\n    if (event !== eventKey) {\n      throw new Error('Invalid event');\n    }\n    EventEmitter.removeAllListeners(eventKey);\n    return EventEmitter.addListener(eventKey, callback);\n  }\n};\n\nexport default VoiceStreamer;\n"],"mappings":";;;;;;AAEA,IAAAA,YAAA,GAAAC,OAAA;AADA;;AAEA,MAAM;EAAEC;AAAY,CAAC,GAAGC,0BAAa;AACrC,MAAMC,YAAY,GAAG,IAAIC,+BAAkB,CAACH,WAAW,CAAC;AACxD,MAAMI,QAAQ,GAAG,MAAM;AAEvB,MAAMC,aAA6B,GAAG;EACpCC,IAAI,EAAGC,OAAuB,IAAoB;IAChD,OAAOP,WAAW,CAACM,IAAI,CAACC,OAAO,CAAC;EAClC,CAAC;EAEDC,KAAK,EAAEA,CAAA,KAAqBR,WAAW,CAACQ,KAAK,CAAC,CAAC;EAE/CC,IAAI,EAAEA,CAAA,KAAqBT,WAAW,CAACS,IAAI,CAAC,CAAC;EAE7CC,MAAM,EAAEA,CAACC,KAAa,EAAEC,QAAgC,KAAK;IAC3D,IAAID,KAAK,KAAKP,QAAQ,EAAE;MACtB,MAAM,IAAIS,KAAK,CAAC,eAAe,CAAC;IAClC;IACAX,YAAY,CAACY,kBAAkB,CAACV,QAAQ,CAAC;IACzC,OAAOF,YAAY,CAACa,WAAW,CAACX,QAAQ,EAAEQ,QAAQ,CAAC;EACrD;AACF,CAAC;AAAC,IAAAI,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAEab,aAAa","ignoreList":[]}